<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.app.mapper.CoursesArticleCommentMapper">
    <delete id="deletesArticleComment">
       DELETE FROM courses_article_comment where id=#{id} or parent_id=#{id}
    </delete>

    <!--查询文章父评论-->
    <select id="queryArticleCommentByArticleId" resultType="org.jeecg.modules.app.entity.CoursesArticleComment" parameterType="string">
        SELECT a.* , b.name AS userName FROM courses_article_comment AS a, courses_systemuser AS b
        WHERE article_id = #{articleId} AND (parent_id is null or parent_id = '')
        AND a.user_id = b.user_id
    </select>

    <!--查询文章的子评论-->
    <select id="queryArticleSubCommentByCommentId" resultType="org.jeecg.modules.app.entity.CoursesArticleComment" parameterType="string">
        SELECT a.* , b.name AS userName FROM courses_article_comment AS a, courses_systemuser AS b
        WHERE article_id = #{articleId} AND (parent_id is not null or parent_id != '')
        AND a.user_id = b.user_id
    </select>

    <select id="getArticleCommentNum" resultType="java.lang.Integer">
        SELECT count(*) FROM courses_article_comment WHERE parent_id = #{commentId}
    </select>

    <select id="getArticleCommentLikeNum" resultType="java.lang.Integer">
        SELECT count(*) FROM courses_article_like WHERE article_id = #{commentId}
    </select>

    <select id="queryArticleCommentLike" resultType="java.lang.String">
        SELECT id FROM courses_article_like WHERE article_id=#{commentId} and user_id=#{userId}
    </select>

    <select id="queryArticleCommentNum" resultType="java.lang.Integer">
        SELECT count(*) FROM courses_article_comment WHERE article_id =#{articleId} AND parent_id is null
    </select>

    <delete id="deleteArticleCommentLike">
        DELETE FROM courses_article_like WHERE article_id=#{commentId} and user_id=#{userId}
    </delete>

    <insert id="addArticleCommentLike">
        INSERT INTO courses_article_like (id,article_id,user_id) VALUE (#{id},#{commentId},#{userId})
    </insert>



</mapper>